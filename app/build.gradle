apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.example.applause"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        utest {
            storeFile rootProject.file("keystore.jks")
            storePassword "password"
            keyAlias "key"
            keyPassword "password"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.utest
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'

    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.squareup.picasso:picasso:2.4.0'

    compile 'com.octo.android.robospice:robospice-retrofit:1.4.14'
    compile 'com.google.code.gson:gson:2.8.0'

    compile 'org.apache.commons:commons-lang3:3.3.2'

    testCompile 'org.codehaus.groovy:groovy:2.4.3:grooid'

    testCompile 'org.robospock:robospock:1.0.1'
    testCompile 'org.objenesis:objenesis:2.2'
    testCompile 'cglib:cglib-nodep:3.2.2'
    testCompile "org.json:json:20140107"
}

apply from: "publish.gradle"

task ciTest(dependsOn: ["clean", "test"])

// Groovy plugins is not working with Databind class generator. Groovy is used only for tests
// so there is no harm to just disable some tasks from build chain.
afterEvaluate {
    tasks.findAll { it.name.endsWith("Groovyc") }.findAll { !it.name.contains("Unit") }.each {
        print "Disabling "
        println it
        it.enabled = false
    }
}


